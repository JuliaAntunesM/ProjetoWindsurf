document.addEventListener('DOMContentLoaded', function() {
    // Elementos da interface
    const welcomeScreen = document.getElementById('welcome-screen');
    const questionScreen = document.getElementById('question-screen');
    const loadingScreen = document.getElementById('loading-screen');
    const resultsScreen = document.getElementById('results-screen');
    const startQuizBtn = document.getElementById('start-quiz');
    const questionText = document.getElementById('question-text');
    const optionsContainer = document.getElementById('options-container');
    const progressBar = document.querySelector('.progress');

    // Perguntas do quiz
    const questions = [
        {
            question: "J√° usou legging ou enchimento por baixo da cal√ßa jeans pra tentar parecer que tem mais bumbum?",
            options: [
                "Sim, direto! Me sinto melhor assim",
                "Sim, e me senti bem at√© tirar a roupa",
                "Sim, mas percebi que isso n√£o resolve de verdade",
                "Nunca usei, mas j√° pensei nisso"
            ]
        },
        {
            question: "Como voc√™ gostaria de se sentir ao colocar uma cal√ßa jeans justinha?",
            options: [
                "Confiante, com o bumbum durinho e redondinho",
                "Poderosa, pronta pra atrair olhares",
                "Orgulhosa do meu corpo no espelho",
                "Me sentintindo bem comigo mesma, e atraente para meu marido/namorado"
            ]
        },
        {
            question: "O que mais te incomoda no momento?",
            options: [
                "Celulite marcando demais nas roupas",
                "Flacidez, queria ter o bumbum redondinho e durinho",
                "Falta de volume no bumbum",
                "Tudo isso junto üò©"
            ]
        },
        {
            question: "Voc√™ j√° tentou algum treino pra gl√∫teos antes?",
            options: [
                "Sim, mas desisti porque n√£o vi resultado",
                "Sim, mas era cansativo e demorado",
                "N√£o, nunca soube por onde come√ßar",
                "J√° tentei de tudo, mas nada me ajudou de verdade"
            ]
        },
        {
            question: "J√° sentiu vergonha em usar biquinis em lugares com muitas pessoas ou na hora de namorar?",
            options: [
                "Sim, mas tento disfar√ßar com sa√≠da ou canga",
                "Sim, me sinto insegura e desconfort√°vel",
                "J√° senti inseguran√ßa, mesmo com elogios",
                "√Äs vezes tento evitar esse momento constrangedor"
            ]
        },
        {
            question: "Quanto tempo por dia voc√™ pode dedicar pra voc√™?",
            options: [
                "10 minutos j√° seria um luxo",
                "15 a 20 minutos, em casa",
                "Qualquer tempo, contanto que me fa√ßa sentir linda de novo!"
            ]
        }
    ];

    // Vari√°veis de controle
    let currentQuestionIndex = 0;
    let userAnswers = [];

    // Adicionar elementos decorativos flutuantes
    function addFloatingElements() {
        const vegetablesContainer = document.querySelector('.floating-vegetables');
        const vegetables = [
            'https://cdn-icons-png.flaticon.com/512/2909/2909787.png', // br√≥colis
            'https://cdn-icons-png.flaticon.com/512/2909/2909841.png', // espinafre
            'https://cdn-icons-png.flaticon.com/512/2909/2909838.png', // alface
            'https://cdn-icons-png.flaticon.com/512/2909/2909830.png', // cenoura
            'https://cdn-icons-png.flaticon.com/512/2909/2909812.png'  // pepino
        ];
        
        // Adicionar bolhas decorativas
        for (let i = 0; i < 15; i++) {
            const bubble = document.createElement('div');
            bubble.classList.add('bubble');
            
            // Tamanho aleat√≥rio
            const size = 20 + Math.random() * 60;
            bubble.style.width = `${size}px`;
            bubble.style.height = `${size}px`;
            
            // Posi√ß√£o aleat√≥ria
            bubble.style.left = `${Math.random() * 100}%`;
            bubble.style.top = `${Math.random() * 100}%`;
            
            // Atraso aleat√≥rio na anima√ß√£o
            bubble.style.animationDelay = `${Math.random() * 5}s`;
            bubble.style.animationDuration = `${5 + Math.random() * 10}s`;
            
            vegetablesContainer.appendChild(bubble);
        }

        // Criar 8 verduras aleat√≥rias
        for (let i = 0; i < 8; i++) {
            const vegetable = document.createElement('img');
            vegetable.src = vegetables[Math.floor(Math.random() * vegetables.length)];
            vegetable.classList.add('vegetable');
            
            // Posi√ß√£o aleat√≥ria
            vegetable.style.left = `${Math.random() * 100}%`;
            vegetable.style.top = `${Math.random() * 100}%`;
            
            // Atraso aleat√≥rio na anima√ß√£o
            vegetable.style.animationDelay = `${Math.random() * 5}s`;
            
            vegetablesContainer.appendChild(vegetable);
        }
    }

    // Iniciar o quiz
    function startQuiz() {
        welcomeScreen.classList.remove('active');
        setTimeout(() => {
            questionScreen.classList.add('active');
            showQuestion(currentQuestionIndex);
        }, 300);
    }

    // Mostrar a pergunta atual
    function showQuestion(index) {
        // Atualizar a barra de progresso
        const progressPercentage = (index / questions.length) * 100;
        progressBar.style.width = `${progressPercentage}%`;

        // Mostrar a pergunta
        questionText.textContent = questions[index].question;
        
        // Limpar op√ß√µes anteriores
        optionsContainer.innerHTML = '';
        
        // Adicionar op√ß√µes
        questions[index].options.forEach((option, i) => {
            const optionElement = document.createElement('div');
            optionElement.classList.add('option');
            optionElement.textContent = option;
            optionElement.addEventListener('click', () => selectOption(i));
            optionsContainer.appendChild(optionElement);
        });
    }

    // Selecionar uma op√ß√£o
    function selectOption(optionIndex) {
        // Armazenar a resposta
        userAnswers[currentQuestionIndex] = optionIndex;
        
        // Destacar a op√ß√£o selecionada
        const options = document.querySelectorAll('.option');
        options.forEach(option => option.classList.remove('selected'));
        options[optionIndex].classList.add('selected');
        
        // Adicionar efeito de confete na op√ß√£o selecionada
        addConfettiEffect(options[optionIndex]);
        
        // Avan√ßar para a pr√≥xima pergunta ap√≥s um breve atraso
        setTimeout(() => {
            questionScreen.classList.remove('active');
            
            setTimeout(() => {
                currentQuestionIndex++;
                
                if (currentQuestionIndex < questions.length) {
                    showQuestion(currentQuestionIndex);
                    questionScreen.classList.add('active');
                } else {
                    showLoadingScreen();
                }
            }, 300);
        }, 800);
    }
    
    // Adicionar efeito de confete
    function addConfettiEffect(element) {
        for (let i = 0; i < 30; i++) {
            const confetti = document.createElement('div');
            confetti.classList.add('confetti');
            
            // Cor aleat√≥ria
            const colors = ['#ff9a9e', '#e83e8c', '#fad0c4', '#ffc2d6'];
            confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
            
            // Tamanho aleat√≥rio
            const size = 5 + Math.random() * 7;
            confetti.style.width = `${size}px`;
            confetti.style.height = `${size}px`;
            
            // Posi√ß√£o inicial
            const rect = element.getBoundingClientRect();
            confetti.style.left = `${rect.left + rect.width/2}px`;
            confetti.style.top = `${rect.top + rect.height/2}px`;
            
            // Anima√ß√£o
            confetti.style.transform = `rotate(${Math.random() * 360}deg)`;
            confetti.style.setProperty('--end-x', `${(Math.random() - 0.5) * 200}px`);
            confetti.style.setProperty('--end-y', `${(Math.random() - 0.5) * 200}px`);
            
            document.body.appendChild(confetti);
            
            // Remover ap√≥s a anima√ß√£o
            setTimeout(() => {
                confetti.remove();
            }, 1000);
        }
    }

    // Mostrar tela de carregamento
    function showLoadingScreen() {
        setTimeout(() => {
            loadingScreen.classList.add('active');
            
            // Adicionar efeito de digita√ß√£o
            const loadingText = document.querySelector('#loading-screen h2');
            const originalText = loadingText.textContent;
            loadingText.textContent = '';
            
            let i = 0;
            const typeInterval = setInterval(() => {
                if (i < originalText.length) {
                    loadingText.textContent += originalText.charAt(i);
                    i++;
                } else {
                    clearInterval(typeInterval);
                }
            }, 50);
            
            // Simular tempo de processamento
            setTimeout(showResults, 3000);
        }, 300);
    }

    // Mostrar resultados
    function showResults() {
        loadingScreen.classList.remove('active');
        setTimeout(() => {
            resultsScreen.classList.add('active');
            
            // Animar as se√ß√µes de resultado uma ap√≥s a outra
            const sections = document.querySelectorAll('.result-section');
            sections.forEach((section, index) => {
                setTimeout(() => {
                    section.classList.add('animated');
                }, index * 300);
            });
        }, 300);
    }

    // Adicionar estilos din√¢micos
    function addDynamicStyles() {
        const styleElement = document.createElement('style');
        styleElement.textContent = `
            .fade-in {
                animation: fadeIn 0.8s ease forwards;
            }
            
            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(20px); }
                to { opacity: 1; transform: translateY(0); }
            }
            
            .bubble {
                position: absolute;
                border-radius: 50%;
                background: linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 154, 158, 0.2));
                box-shadow: 0 0 10px rgba(255, 154, 158, 0.3);
                animation: float 15s infinite ease-in-out;
                z-index: 1;
            }
            
            .confetti {
                position: fixed;
                border-radius: 50%;
                pointer-events: none;
                z-index: 9999;
                animation: confetti-fall 1s forwards;
            }
            
            @keyframes confetti-fall {
                0% {
                    transform: translate(0, 0) rotate(0deg);
                    opacity: 1;
                }
                100% {
                    transform: translate(var(--end-x), var(--end-y)) rotate(360deg);
                    opacity: 0;
                }
            }
            
            .result-section {
                opacity: 0;
                transform: translateY(20px);
                transition: opacity 0.5s ease, transform 0.5s ease;
            }
            
            .result-section.animated {
                opacity: 1;
                transform: translateY(0);
            }
        `;
        document.head.appendChild(styleElement);
    }

    // Adicionar classe para anima√ß√£o de entrada
    setTimeout(() => {
        document.querySelector('.container').classList.add('fade-in');
    }, 300);

    // Event listeners
    startQuizBtn.addEventListener('click', startQuiz);

    // Inicializar elementos decorativos
    addFloatingElements();
    
    // Adicionar estilos din√¢micos
    addDynamicStyles();
});
